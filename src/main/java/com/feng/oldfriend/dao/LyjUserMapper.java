package com.feng.oldfriend.dao;

import com.feng.oldfriend.VO.BatchUserState;
import com.feng.oldfriend.entity.LyjUser;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface LyjUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_user
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer lyjUserId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_user
     *
     * @mbggenerated
     */
    int insert(LyjUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_user
     *
     * @mbggenerated
     */
    LyjUser selectByPrimaryKey(Integer lyjUserId);

    /**
     * create by: yangchenxiao
     * create time: 2019/8/11 16:43
     * description: 用户登录验证
     */
    LyjUser userLogin(@Param("phone")String phone,@Param("password")String password);

    /**
     * create by: yangchenxiao
     * create time: 2019/8/11 16:43
     * description: 根据唯一标识找到用户
     */
    LyjUser findUserByUUID(@Param("uuid")String uuid);

    /**
     * create by: yangchenxiao
     * create time: 2019/8/12 21:40
     * description: 根据手机号码找到用户
     */
    Integer findUserByPhone(@Param("phone")String phone);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/3 21:48
     * description: 根据openid返回用户
     */
    LyjUser findUserByOpenId(@Param("openid")String openid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_user
     *
     * @mbggenerated
     */
    List<LyjUser> selectAll();

    /**
     * create by: yangchenxiao
     * create time: 2019/7/28 15:02
     * description: 根据搜索条件对所有的用户进行查找
     */
    List<LyjUser> getUsers(@Param("searchText") String searchText);

    Integer getUsersCount(@Param("searchText") String searchText);

    List<LyjUser> getUsersByStatus(@Param("searchText") String searchText,@Param("status") String status);

    Integer getUsersCountByStatus(@Param("searchText") String searchText,@Param("status") String status);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_user
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(LyjUser record);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/8 15:25
     * description: 修改用户状态
     */
    void updateStatus(LyjUser record);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/8 16:58
     * description: 修改用户密码
     */
    void updateUserPassword(LyjUser record);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/11 20:57
     * description: 根据UUID和密码找到用户
     */
    LyjUser findUserByUuidAndPassword(LyjUser record);

    int updateByPrimaryKeyForVolunteer(LyjUser record);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/9 21:35
     * description: 根据机构查询用户
     */
    List<LyjUser> getUsersByCompany(@Param(value = "state")Integer state,@Param(value = "companyId")Integer companyId,@Param(value = "searchText")String searchText);

    Integer getUsersByCompanyCount(@Param(value = "state")Integer state,@Param(value = "companyId")Integer companyId,@Param(value = "searchText")String searchText);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/11 21:17
     * description: 批量更新用户的审批状态
     */
    void batchUpdateUserStatus(BatchUserState datas);
}
