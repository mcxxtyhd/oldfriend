package com.feng.oldfriend.dao;

import com.feng.oldfriend.VO.BatchUserState;
import com.feng.oldfriend.entity.LyjRequirement;
import com.feng.oldfriend.entity.LyjRequirementApply;
import com.feng.oldfriend.entity.LyjRequirementApplyField;
import com.feng.oldfriend.enums.ApplyStatus;
import io.swagger.models.auth.In;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

@Mapper
public interface LyjRequirementApplyMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_requirement_apply
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer lyjRequirementApplyid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_requirement_apply
     *
     * @mbggenerated
     */
    int insert(LyjRequirementApply record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_requirement_apply
     *
     * @mbggenerated
     */
    LyjRequirementApply selectByPrimaryKey(Integer lyjRequirementApplyid);

    /**
     * create by: yangchenxiao
     * create time: 2019/7/24 22:02
     * description: 根据需求ID查找到所有的需求申请
     */
    List<LyjRequirementApply> selectByRequirementId(@Param("lyjRequirementId") Integer lyjRequirementId);

    Integer getRequirementApplysCount(@Param("lyjRequirementId") Integer lyjRequirementId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_requirement_apply
     *
     * @mbggenerated
     */
    List<LyjRequirementApply> selectAll();

    /**
     * create by: yangchenxiao
     * create time: 2019/8/20 20:45
     * description: 根据UUID和状态获得所有的需求申请
     */
    List<LyjRequirementApply> selectAllByUuid(@Param("uuid") String uuid, @Param("status")Integer status);

    /**
     * create by: yangchenxiao
     * create time: 2019/7/28 16:19
     * description: 根据参数(搜索内容,唯一标识ID，需求的状态)进行查找
     */
    List<LyjRequirementApplyField> getRequirementByParams(@Param("searchText") String searchText,
                                                          @Param("uuid") String uuid,
                                                          @Param("status") Integer status);


    /**
     * create by: yangchenxiao
     * create time: 2019/8/18 11:29
     * description: 根据需求ID或状态查询需求申请的数据
     */
    List<LyjRequirementApplyField> getRequirementByIdStatus(@Param("applyid") Integer applyid, @Param("status") Integer status);

    /**
     * create by: yangchenxiao
     * create time: 2019/8/20 21:56
     * description: 评价 打分 输入持续时间 输入评价
     */
    void JudgeRequirementApply(Integer applyId, Integer star, String comment, Integer duration);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lyj_requirement_apply
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(LyjRequirementApply record);

    /**
     * create by: yangchenxiao
     * create time: 2019/8/19 19:53
     * description: 根据需求ID和状态码更改
     */
    void updateRequirementApplyStatus(@Param("applyId")Integer applyId, @Param("status")Integer status);

    /**
     * create by: yangchenxiao
     * create time: 2019/9/11 22:07
     * description: 批量更新需求申请的状态
     */
    void batchUpdateApplyState(BatchUserState datas);

    /**
     * create by: yangchenxiao
     * create time: 2019/7/24 21:57
     * description: 将除了某个申请ID外的其他同一申请需求的申请置为申请失败
     */
    int updateApplyFailed(@Param("requirementId")Integer requirementId,
                          @Param("requirementApplyId") Integer requirementApplyId,
                          @Param("lyjRequirementApplystate")Integer lyjRequirementApplystate);
}
