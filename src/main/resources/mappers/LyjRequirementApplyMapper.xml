<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.feng.oldfriend.dao.LyjRequirementApplyMapper">
    <resultMap id="BaseResultMap" type="com.feng.oldfriend.entity.LyjRequirementApply">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="lyj_requirement_applyid" property="lyjRequirementApplyid" jdbcType="INTEGER"/>
        <result column="lyj_user_id" property="lyjUserId" jdbcType="VARCHAR"/>
        <result column="lyj_volunteer_id" property="lyjVolunteerId" jdbcType="INTEGER"/>
        <result column="lyj_requirement_applystate" property="lyjRequirementApplystate" jdbcType="INTEGER"/>
        <result column="lyj_requirement_applycomment" property="lyjRequirementApplycomment" jdbcType="VARCHAR"/>
        <result column="lyj_requirement_applystar" property="lyjRequirementApplystar" jdbcType="INTEGER"/>
        <result column="lyj_requirement_applyrequirementid" property="lyjRequirementApplyrequirementid"
                jdbcType="INTEGER"/>
        <result column="lyj_requirement_applyduration" property="lyjRequirementApplyduration" jdbcType="INTEGER"/>

        <result column="lyj_requirement_apply_createdate" property="lyjRequirementApplycreatedate" jdbcType="TIMESTAMP"/>
        <result column="lyj_requirement_apply_rejectdate" property="lyjRequirementApplyrejectdate" jdbcType="TIMESTAMP"/>
        <result column="lyj_requirement_apply_approvedate" property="lyjRequirementApplyapprovedate" jdbcType="TIMESTAMP"/>
        <result column="lyj_requirement_apply_servicedate" property="lyjRequirementApplyservicedate" jdbcType="TIMESTAMP"/>
        <result column="lyj_requirement_apply_finishdate" property="lyjRequirementApplyfinishdate" jdbcType="TIMESTAMP"/>
        <result column="lyj_requirement_apply_faildate" property="lyjRequirementApplyfaildate" jdbcType="TIMESTAMP"/>

    </resultMap>

    <sql id="Base_Column_List">
      lyj_requirement_apply.lyj_requirement_applyid,
      lyj_requirement_apply.lyj_user_id,
      lyj_requirement_apply.lyj_volunteer_id,
      lyj_requirement_apply.lyj_requirement_applystate,
      lyj_requirement_apply.lyj_requirement_applycomment,
      lyj_requirement_apply.lyj_requirement_applystar,
      lyj_requirement_apply.lyj_requirement_applyrequirementid,
      lyj_requirement_apply.lyj_requirement_applyduration,

      lyj_requirement_apply.lyj_requirement_apply_createdate,
      lyj_requirement_apply.lyj_requirement_apply_rejectdate,
      lyj_requirement_apply.lyj_requirement_apply_approvedate,
      lyj_requirement_apply.lyj_requirement_apply_servicedate,
      lyj_requirement_apply.lyj_requirement_apply_finishdate,
      lyj_requirement_apply.lyj_requirement_apply_faildate
  </sql>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from lyj_requirement_apply
        where lyj_requirement_applyid = #{lyjRequirementApplyid,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.feng.oldfriend.entity.LyjRequirementApply">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into lyj_requirement_apply (lyj_requirement_applyid, lyj_user_id,
        lyj_volunteer_id, lyj_requirement_applystate,
        lyj_requirement_applycomment, lyj_requirement_applystar,
        lyj_requirement_applyrequirementid, lyj_requirement_applyduration,

        lyj_requirement_apply_createdate,
        lyj_requirement_apply_rejectdate,
        lyj_requirement_apply_approvedate,
        lyj_requirement_apply_servicedate,
        lyj_requirement_apply_finishdate,
        lyj_requirement_apply_faildate
        )
        values (#{lyjRequirementApplyid,jdbcType=INTEGER}, #{lyjUserId,jdbcType=VARCHAR},
        #{lyjVolunteerId,jdbcType=INTEGER}, #{lyjRequirementApplystate,jdbcType=INTEGER},
        #{lyjRequirementApplycomment,jdbcType=VARCHAR}, #{lyjRequirementApplystar,jdbcType=INTEGER},
        #{lyjRequirementApplyrequirementid,jdbcType=INTEGER}, #{lyjRequirementApplyduration,jdbcType=INTEGER},

        #{lyjRequirementApplycreatedate,jdbcType=TIMESTAMP},
        #{lyjRequirementApplyrejectdate,jdbcType=TIMESTAMP},
        #{lyjRequirementApplyapprovedate,jdbcType=TIMESTAMP},
        #{lyjRequirementApplyservicedate,jdbcType=TIMESTAMP},
        #{lyjRequirementApplyfinishdate,jdbcType=TIMESTAMP},
        #{lyjRequirementApplyfaildate,jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.feng.oldfriend.entity.LyjRequirementApply">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update lyj_requirement_apply
        set lyj_user_id = #{lyjUserId,jdbcType=VARCHAR},
        lyj_volunteer_id = #{lyjVolunteerId,jdbcType=INTEGER},
        lyj_requirement_applystate = #{lyjRequirementApplystate,jdbcType=INTEGER},
        lyj_requirement_applycomment = #{lyjRequirementApplycomment,jdbcType=VARCHAR},
        lyj_requirement_applystar = #{lyjRequirementApplystar,jdbcType=INTEGER},
        lyj_requirement_applyrequirementid = #{lyjRequirementApplyrequirementid,jdbcType=INTEGER},
        lyj_requirement_applyduration = #{lyjRequirementApplyduration,jdbcType=INTEGER},

        lyj_requirement_apply_createdate=#{lyjRequirementApplycreatedate,jdbcType=TIMESTAMP},
        lyj_requirement_apply_rejectdate= #{lyjRequirementApplyrejectdate,jdbcType=TIMESTAMP},
        lyj_requirement_apply_approvedate= #{lyjRequirementApplyapprovedate,jdbcType=TIMESTAMP},
        lyj_requirement_apply_servicedate=#{lyjRequirementApplyservicedate,jdbcType=TIMESTAMP},
        lyj_requirement_apply_finishdate=#{lyjRequirementApplyfinishdate,jdbcType=TIMESTAMP},
        lyj_requirement_apply_faildate= #{lyjRequirementApplyfaildate,jdbcType=TIMESTAMP}

        where lyj_requirement_applyid = #{lyjRequirementApplyid,jdbcType=INTEGER}
    </update>

    <!--将除了某个申请ID外的其他同一申请需求的申请置为申请失败-->
    <update id="updateApplyFailed">
    update lyj_requirement_apply
    set lyj_requirement_applystate = #{lyjRequirementApplystate,jdbcType=INTEGER}
    where lyj_requirement_applyid != #{requirementApplyId,jdbcType=INTEGER}
    and lyj_requirement_applyrequirementid=#{requirementId,jdbcType=INTEGER}
    and lyj_requirement_applystate=1
  </update>

    <!--根据需求ID和状态码更改-->
    <update id="updateRequirementApplyStatus">
        update lyj_requirement_apply
        set lyj_requirement_applystate = #{status,jdbcType=INTEGER}
        where lyj_requirement_applyid = #{applyId,jdbcType=INTEGER}
    </update>

    <!--评价 打分 输入持续时间 输入评价-->
    <update id="JudgeRequirementApply">
        update lyj_requirement_apply
        set lyj_requirement_applystar = #{star,jdbcType=INTEGER},
            lyj_requirement_applycomment = #{comment,jdbcType=VARCHAR},
            lyj_requirement_applyduration = #{duration,jdbcType=INTEGER}
        where lyj_requirement_applyid = #{applyId,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select lyj_requirement_applyid, lyj_user_id, lyj_volunteer_id, lyj_requirement_applystate,
        lyj_requirement_applycomment, lyj_requirement_applystar, lyj_requirement_applyrequirementid,
        lyj_requirement_applyduration,
        lyj_requirement_apply_createdate,
        lyj_requirement_apply_rejectdate,
        lyj_requirement_apply_approvedate,
        lyj_requirement_apply_servicedate,
        lyj_requirement_apply_finishdate,
        lyj_requirement_apply_faildate
        from lyj_requirement_apply
        where lyj_requirement_applyid = #{lyjRequirementApplyid,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select lyj_requirement_applyid, lyj_user_id, lyj_volunteer_id, lyj_requirement_applystate,
        lyj_requirement_applycomment, lyj_requirement_applystar, lyj_requirement_applyrequirementid,
        lyj_requirement_applyduration,
        lyj_requirement_apply_createdate,
        lyj_requirement_apply_rejectdate,
        lyj_requirement_apply_approvedate,
        lyj_requirement_apply_servicedate,
        lyj_requirement_apply_finishdate,
        lyj_requirement_apply_faildate
        from lyj_requirement_apply
    </select>

    <!--根据UUID和状态获得所有的需求申请-->
    <select id="selectAllByUuid" resultMap="BaseResultMap">
        select *
        from lyj_requirement_apply
        where lyj_user_id=#{uuid} and lyj_requirement_applystate=#{status}
    </select>


    <!--根据需求ID查询所有的申请-->
    <select id="selectByRequirementId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lyj_requirement_apply
        <if test="lyjRequirementId!=null and lyjRequirementId!=0 ">
            where lyj_requirement_applyrequirementid= #{lyjRequirementId,jdbcType=DECIMAL}
        </if>
    </select>

    <select id="getRequirementApplysCount" resultType="java.lang.Integer">
        select
        count(1)
        from lyj_requirement_apply
        <if test="lyjRequirementId!=null and lyjRequirementId!=0 ">
            where lyj_requirement_applyrequirementid= #{lyjRequirementId,jdbcType=DECIMAL}
        </if>
    </select>

    <!--根据搜索内容进行查找数据-->
    <select id="getLyjRequirements" resultMap="BaseResultMap">

        <choose>
            <when test="searchText">
                <bind name="pattern" value="'%'+ searchText+'%'"/>
            </when>
            <otherwise>
                <bind name="pattern" value="'%%'"/>
            </otherwise>
        </choose>
        select
        <include refid="Base_Column_List"/>
        from lyj_requirement
        <where>
            <if test="searchText!=null and searchText!='' ">
                (
                lyj_requirement_name like #{pattern}
                or lyj_requirement_description like #{pattern}
                or lyj_requirement_city like #{pattern}
                or lyj_requirement_area like #{pattern}
                or lyj_requirement_street like #{pattern}
                or lyj_requirement_rawaddress like #{pattern}
                )
            </if>
        </where>
        order by lyj_requirement_begindatetime desc

    </select>

    <!--根据参数(搜索内容,创建人ID，需求的状态)进行查找-->
    <select id="getRequirementByParams" resultType="com.feng.oldfriend.entity.LyjRequirementApplyField">
        <choose>
            <when test="searchText">
                <bind name="pattern" value="'%'+ searchText+'%'"/>
            </when>
            <otherwise>
                <bind name="pattern" value="'%%'"/>
            </otherwise>
        </choose>
        SELECT
        lyj_requirement_applyid,
        lyj_requirement_apply.lyj_user_id,
        lyj_volunteer_id,
        lyj_requirement_applystate,
        lyj_requirement_applycomment,
        lyj_requirement_applystar,
        lyj_requirement_applyrequirementid,
        lyj_requirement_applyduration,
        lyj_requirement_id,
        lyj_requirement_name,
        lyj_requirement_description,
        lyj_requirement_createuser,
        lyj_requirement_applyuser,
        lyj_requirement_isvolunteer,
        lyj_requirement_city,
        lyj_requirement_area,
        lyj_requirement_street,
        lyj_requirement_createdatetime,
        lyj_requirement_begindatetime,
        lyj_requirement_enddatetime,
        lyj_requirement_rawaddress,
        lyj_requirement_maplocation,
        lyj_requirement_reward,
        lyj_requirement_volunteerperfer,
        lyj_user.lyj_user_name,
        lyj_requirement.lyj_requirement_process,

        lyj_requirement_apply.lyj_requirement_apply_createdate,
        lyj_requirement_apply.lyj_requirement_apply_rejectdate,
        lyj_requirement_apply.lyj_requirement_apply_approvedate,
        lyj_requirement_apply.lyj_requirement_apply_servicedate,
        lyj_requirement_apply.lyj_requirement_apply_finishdate,
        lyj_requirement_apply.lyj_requirement_apply_faildate
        FROM
        lyj_requirement_apply LEFT JOIN
        lyj_requirement on
        lyj_requirement_applyrequirementid = lyj_requirement_id
        LEFT JOIN lyj_user ON lyj_requirement_apply.lyj_user_id = lyj_user.lyj_user_uuid

        <where>
            <if test="searchText!=null and searchText!='' ">
                lyj_requirement_name like #{pattern}
                or lyj_requirement_description like #{pattern}
                or lyj_requirement_city like #{pattern}
                or lyj_requirement_area like #{pattern}
                or lyj_requirement_street like #{pattern}
                or lyj_requirement_rawaddress like #{pattern}
            </if>

            <if test="uuid!=null and uuid!='' ">

                <if test="searchText!=null and searchText!='' ">
                    and
                </if>
                lyj_requirement_apply.lyj_user_id = #{uuid,jdbcType=VARCHAR}
            </if>

            <if test="status!=null and status!=0 ">

                <if test="(uuid!=null and uuid!='') or (searchText!=null and searchText!='')">
                    and
                </if>
                lyj_requirement_applystate in
                <foreach collection="status" item="single" index="index" open=" (" close=")" separator=",">
                    #{single}
                </foreach>
            </if>
        </where>
        order by lyj_requirement_begindatetime desc

    </select>

    <!--根据参数(搜索内容,创建人ID，需求的状态)进行查找-->
    <select id="getRequirementByParamsCount" resultType="java.lang.Integer">
        <choose>
            <when test="searchText">
                <bind name="pattern" value="'%'+ searchText+'%'"/>
            </when>
            <otherwise>
                <bind name="pattern" value="'%%'"/>
            </otherwise>
        </choose>
        SELECT
        count(1)
        FROM
        lyj_requirement_apply LEFT JOIN
        lyj_requirement on
        lyj_requirement_applyrequirementid = lyj_requirement_id
        LEFT JOIN lyj_user ON lyj_requirement_apply.lyj_user_id = lyj_user.lyj_user_uuid
        <where>
            <if test="searchText!=null and searchText!='' ">
                lyj_requirement_name like #{pattern}
                or lyj_requirement_description like #{pattern}
                or lyj_requirement_city like #{pattern}
                or lyj_requirement_area like #{pattern}
                or lyj_requirement_street like #{pattern}
                or lyj_requirement_rawaddress like #{pattern}
            </if>

            <if test="uuid!=null and uuid!='' ">

                <if test="searchText!=null and searchText!='' ">
                    and
                </if>
                lyj_requirement_apply.lyj_user_id = #{uuid,jdbcType=VARCHAR}
            </if>

            <if test="status!=null and status!=0 ">

                <if test="(uuid!=null and uuid!='') or (searchText!=null and searchText!='')">
                    and
                </if>
                lyj_requirement_applystate in
                <foreach collection="status" item="single" index="index" open=" (" close=")" separator=",">
                    #{single}
                </foreach>
            </if>
        </where>
    </select>


    <!--根据需求ID和状态查询需求申请的数据-->
    <select id="getRequirementByIdStatus" resultType="com.feng.oldfriend.entity.LyjRequirementApplyField">
        SELECT
        lyj_requirement_applyid,
        lyj_requirement_apply.lyj_user_id,
        lyj_volunteer_id,
        lyj_requirement_applystate,
        lyj_requirement_applycomment,
        lyj_requirement_applystar,
        lyj_requirement_applyrequirementid,
        lyj_requirement_applyduration,
        lyj_requirement_id,
        lyj_requirement_name,
        lyj_requirement_description,
        lyj_requirement_createuser,
        lyj_requirement_applyuser,
        lyj_requirement_isvolunteer,
        lyj_requirement_city,
        lyj_requirement_area,
        lyj_requirement_street,
        lyj_requirement_createdatetime,
        lyj_requirement_begindatetime,
        lyj_requirement_enddatetime,
        lyj_requirement_rawaddress,
        lyj_requirement_maplocation,
        lyj_requirement_reward,
        lyj_requirement_volunteerperfer,
        lyj_user.lyj_user_name,
        lyj_user.lyj_user_phone,

        lyj_requirement_apply.lyj_requirement_apply_createdate,
        lyj_requirement_apply.lyj_requirement_apply_rejectdate,
        lyj_requirement_apply.lyj_requirement_apply_approvedate,
        lyj_requirement_apply.lyj_requirement_apply_servicedate,
        lyj_requirement_apply.lyj_requirement_apply_finishdate,
        lyj_requirement_apply.lyj_requirement_apply_faildate

        FROM
        lyj_requirement_apply LEFT JOIN
        lyj_requirement on
        lyj_requirement_applyrequirementid = lyj_requirement_id
        LEFT JOIN lyj_user ON lyj_requirement_apply.lyj_user_id = lyj_user.lyj_user_uuid
        where 1=1
        <if test="status!=null and status!=0 ">
            and lyj_requirement_applystate = #{status}
        </if>

        <if test="applyid!=null and applyid!=0 ">
            and lyj_requirement_applyrequirementid = #{applyid}
        </if>
        order by lyj_requirement_begindatetime desc
    </select>

    <!--批量更新需求申请的状态-->
    <update id="batchUpdateApplyState">
        update lyj_requirement_apply
        set lyj_requirement_applystate=#{state}
        where lyj_requirement_applyid in
        <foreach collection="ids" item="single" index="index"
                 open=" (" close=")" separator=",">
            #{single}
        </foreach>
    </update>

    <!--根据用户信息  用户UUID和志愿者ID查询到所有的申请ID集合-->
    <select id="getAllApplyIdsByUserInfo" resultType="java.lang.Integer">
        select lyj_requirement_applyrequirementid
        from lyj_requirement_apply
        where lyj_user_id=#{uuid} or lyj_volunteer_id=#{volunteerId}
    </select>

    <select id="selectApplyFinish" resultType="java.lang.Integer">
       select lyj_requirement_applyid
       from lyj_requirement_apply
       where lyj_requirement_applystate=4
    </select>

    <update id="updateApplyFinish">
       update lyj_requirement_apply
       set lyj_requirement_applystate=5
       where lyj_requirement_applystate=4
    </update>

    <select id="selectByRequirementAndUUID" resultType="java.lang.Integer">
        select count(1) from lyj_requirement_apply
        where lyj_user_id=#{uuid} and lyj_requirement_applyrequirementid=#{requirementId}
    </select>

</mapper>
